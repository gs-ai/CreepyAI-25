[string_options]
documents_path = /Users/mbaosint/Desktop/Projects/CreepyAI/documents
output_format = json
language_model = en_core_web_sm
extraction_mode = full

[boolean_options]
enabled = True
extract_entities = True
detect_pii = True
summarize_content = True
keyword_extraction = True
sentiment_analysis = True
relationship_mapping = True

[integer_options]
summary_length = 200
context_window = 5
min_keyword_frequency = 3
entity_confidence = 80
max_file_size = 25000000
max_retries = 3  # New option added

[array_options]
entity_types = ["PERSON", "ORG", "GPE", "DATE", "MONEY", "PRODUCT"]
pii_patterns = ["email", "phone", "ssn", "credit_card", "address"]
supported_formats = ["txt", "pdf", "docx", "html", "md"]

# Document Analyzer Plugin Configuration
# Plugin for extracting location data from documents

# Plugin metadata
name: "DocumentAnalyzer"
version: "1.0.0"
author: "CreepyAI Team"
description: "Analyzes documents for location metadata and content"
website: "https://creepyai.example.com/plugins/document-analyzer"

# Plugin settings
enabled: true
priority: 30
required: false
auto_load: false
category: "analysis"

# Plugin dependencies
dependencies:
  python: ">=3.8.0"
  packages:
    - "python-docx>=0.8.11"
    - "PyPDF2>=2.0.0"
    - "pptx>=0.6.18"  # Optional for PowerPoint support
    - "nltk>=3.6.0"   # Optional for advanced text analysis
  system: []

# Plugin configuration
config:
  # Supported file types
  supported_extensions:
    - ".doc"
    - ".docx"
    - ".pdf"
    - ".txt"
    - ".rtf"
    - ".ppt"
    - ".pptx"
  
  # Analysis options
  extract_metadata: true
  analyze_content: true
  extract_images: true
  ocr_enabled: false  # Requires additional dependencies
  
  # Location detection settings
  location_detection:
    use_regex_patterns: true
    use_nlp_analysis: false  # Requires NLTK
    use_geocoding: true
    confidence_threshold: 0.7
    
    # Regular expression patterns for location detection
    patterns:
      - "(?:lat|latitude)[:\\s]*([-+]?\\d+\\.\\d+)"
      - "(?:lon|long|longitude)[:\\s]*([-+]?\\d+\\.\\d+)"
      - "(?:located at|location|place)[:\\s]*([\\w\\s]+)"
      - "\\b(?:in|at|near)\\s+([A-Z][a-zA-Z]+(?:,\\s*[A-Z][a-zA-Z]+)?)"
  
  # Processing limits
  max_file_size: 52428800  # 50MB
  max_pages: 1000
  timeout: 300  # seconds
  
  # Excluded content
  excluded_folders:
    - "node_modules"
    - "venv"
    - "__pycache__"

# Development settings (only used in debug mode)
development:
  log_level: "INFO"
  save_extracted_text: true
  extracted_text_dir: "${TEMP_DIR}/document_text"
  test_files_dir: "${PROJECT_ROOT}/tests/sample_documents"
